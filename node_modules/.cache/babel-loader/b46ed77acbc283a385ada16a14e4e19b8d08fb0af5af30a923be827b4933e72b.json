{"ast":null,"code":"import React,{useState}from'react';import{PayPalScriptProvider,PayPalButtons}from\"@paypal/react-paypal-js\";import axios from\"axios\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PaymentDetails(){const[paid,setPaidFor]=useState(false);const[error,setError]=useState(false);const[amount,setAmount]=useState(20);// Custom amount\n// Create order function\nconst CreateOrder=async function(amount){let currency=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"USD\";try{// Make a GET request to fetch order data from the backend\nconst response=await axios.get(`https://learnreflects.com/Server/Payment.php?amount=${amount}&currency=${currency}`);console.log(response.data);// Log the response data\nreturn response.data.orderID;// Return the order ID from the backend\n}catch(error){console.error('Error creating PayPal order:',error);setError(true);// Set error state if there's an issue\n}};// Handle order approval (when payment is completed)\nconst handleApprove=async(data,actions)=>{try{// Capture the order using the actions object\nconst orderData=await actions.order.capture();console.log(\"Order successfully captured! Order Data: \",orderData);setPaidFor(true);// Set payment success state\n}catch(error){console.error('Error capturing order:',error);setError(true);// Set error state if there's an issue\n}};// Handle errors in payment process\nconst handleError=err=>{console.log('Error: ',err);setError(true);// Set error state\n};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(PayPalScriptProvider,{options:{\"client-id\":\"AQTrkWTmd3pfVlhl_bNhKbCyjeVh0Yf-O-fsWLPw0sRgrzWwdPOCx0o_YFKSmoFfxkdecE0ySjfxoWPt\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"payment-details\",id:\"paypal-button-container\",children:[paid?/*#__PURE__*/_jsx(\"h2\",{children:\"Payment Successful!\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:amount,onChange:e=>setAmount(e.target.value),placeholder:\"Enter Amount\"}),/*#__PURE__*/_jsx(PayPalButtons,{createOrder:async(data,actions)=>{const orderID=await CreateOrder(amount);// Use the custom amount\nreturn orderID;// Return the created order ID\n},onApprove:handleApprove// Approve the order\n,onError:handleError// Handle any errors\n})]}),error&&/*#__PURE__*/_jsx(\"p\",{children:\"An error occurred during the payment process. Please try again.\"})]})})});}","map":{"version":3,"names":["React","useState","PayPalScriptProvider","PayPalButtons","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PaymentDetails","paid","setPaidFor","error","setError","amount","setAmount","CreateOrder","currency","arguments","length","undefined","response","get","console","log","data","orderID","handleApprove","actions","orderData","order","capture","handleError","err","children","options","className","id","type","value","onChange","e","target","placeholder","createOrder","onApprove","onError"],"sources":["C:/Users/didri/Desktop/PreRealse/LearnReflect-Prerealse-website/src/PaymentDetails.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport axios from \"axios\";\r\n\r\nexport default function PaymentDetails() {\r\n    const [paid, setPaidFor] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [amount, setAmount] = useState(20); // Custom amount\r\n\r\n    // Create order function\r\n    const CreateOrder = async (amount, currency = \"USD\") => {\r\n        try {\r\n            // Make a GET request to fetch order data from the backend\r\n            const response = await axios.get(`https://learnreflects.com/Server/Payment.php?amount=${amount}&currency=${currency}`);\r\n            console.log(response.data); // Log the response data\r\n            return response.data.orderID; // Return the order ID from the backend\r\n        } catch (error) {\r\n            console.error('Error creating PayPal order:', error);\r\n            setError(true); // Set error state if there's an issue\r\n        }\r\n    };\r\n\r\n    // Handle order approval (when payment is completed)\r\n    const handleApprove = async (data, actions) => {\r\n        try {\r\n            // Capture the order using the actions object\r\n            const orderData = await actions.order.capture();\r\n            console.log(\"Order successfully captured! Order Data: \", orderData);\r\n            setPaidFor(true); // Set payment success state\r\n        } catch (error) {\r\n            console.error('Error capturing order:', error);\r\n            setError(true); // Set error state if there's an issue\r\n        }\r\n    };\r\n\r\n    // Handle errors in payment process\r\n    const handleError = (err) => {\r\n        console.log('Error: ', err);\r\n        setError(true); // Set error state\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PayPalScriptProvider options={{ \"client-id\": \"AQTrkWTmd3pfVlhl_bNhKbCyjeVh0Yf-O-fsWLPw0sRgrzWwdPOCx0o_YFKSmoFfxkdecE0ySjfxoWPt\" }}>\r\n                <div className='payment-details' id=\"paypal-button-container\">\r\n                    {paid ? (\r\n                        <h2>Payment Successful!</h2>\r\n                    ) : (\r\n                        <>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={amount}\r\n                                onChange={(e) => setAmount(e.target.value)}\r\n                                placeholder=\"Enter Amount\"\r\n                            />\r\n                            <PayPalButtons\r\n                                createOrder={async (data, actions) => {\r\n                                    const orderID = await CreateOrder(amount); // Use the custom amount\r\n                                    return orderID; // Return the created order ID\r\n                                }}\r\n                                onApprove={handleApprove} // Approve the order\r\n                                onError={handleError} // Handle any errors\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {error && <p>An error occurred during the payment process. Please try again.</p>}\r\n                </div>\r\n            </PayPalScriptProvider>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}