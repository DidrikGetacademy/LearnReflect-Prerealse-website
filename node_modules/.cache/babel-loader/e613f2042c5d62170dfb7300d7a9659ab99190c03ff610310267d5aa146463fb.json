{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didri\\\\Desktop\\\\PreRealse\\\\LearnReflect-Prerealse-website\\\\src\\\\PaymentDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaymentDetails() {\n  _s();\n  const [paid, setPaidFor] = useState(false);\n  const [error, setError] = useState(false);\n  const [amount, setAmount] = useState(20); // Allowing custom amount\n\n  const CreateOrder = async (amount = 20, currency = \"USD\") => {\n    try {\n      const response = await fetch('http://your-backend-url/create-paypal-order.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount,\n          currency\n        })\n      });\n      const data = await response.json();\n      return data.orderID; // Return the order ID from the backend\n    } catch (error) {\n      console.error('Error creating PayPal order:', error);\n      setError(true);\n    }\n  };\n  const handleApprove = async (data, actions) => {\n    try {\n      // Capture the order using the actions object\n      const orderData = await actions.order.capture();\n      console.log(\"Order successfully captured! Order Data: \", orderData);\n      setPaidFor(true);\n    } catch (error) {\n      console.error('Error capturing order:', error);\n      setError(true);\n    }\n  };\n  const handleError = err => {\n    console.log('Error: ', err);\n    setError(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"path_to_your_image\",\n      alt: \"Payment Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: {\n        \"client-id\": \"AQTrkWTmd3pfVlhl_bNhKbCyjeVh0Yf-O-fsWLPw0sRgrzWwdPOCx0o_YFKSmoFfxkdecE0ySjfxoWPt\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-details\",\n        id: \"paypal-button-container\",\n        children: [paid ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payment Successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: \"Enter Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PayPalButtons, {\n            createOrder: async (data, actions) => {\n              const orderID = await CreateOrder(amount); // Use custom amount\n              return orderID; // Return the created order ID\n            },\n            onApprove: handleApprove,\n            onError: handleError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"An error occurred during the payment process. Please try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(PaymentDetails, \"7ZR7OdchYD6YLzR0PpiXwluqDy0=\");\n_c = PaymentDetails;\nvar _c;\n$RefreshReg$(_c, \"PaymentDetails\");","map":{"version":3,"names":["React","useState","PayPalScriptProvider","PayPalButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentDetails","_s","paid","setPaidFor","error","setError","amount","setAmount","CreateOrder","currency","response","fetch","method","headers","body","JSON","stringify","data","json","orderID","console","handleApprove","actions","orderData","order","capture","log","handleError","err","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","options","className","id","type","value","onChange","e","target","placeholder","createOrder","onApprove","onError","_c","$RefreshReg$"],"sources":["C:/Users/didri/Desktop/PreRealse/LearnReflect-Prerealse-website/src/PaymentDetails.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nexport default function PaymentDetails() {\r\n    const [paid, setPaidFor] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [amount, setAmount] = useState(20); // Allowing custom amount\r\n\r\n    const CreateOrder = async (amount = 20, currency = \"USD\") => {\r\n        try {\r\n            const response = await fetch('http://your-backend-url/create-paypal-order.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ amount, currency }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            return data.orderID; // Return the order ID from the backend\r\n        } catch (error) {\r\n            console.error('Error creating PayPal order:', error);\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    const handleApprove = async (data, actions) => {\r\n        try {\r\n            // Capture the order using the actions object\r\n            const orderData = await actions.order.capture();\r\n            console.log(\"Order successfully captured! Order Data: \", orderData);\r\n            setPaidFor(true);\r\n        } catch (error) {\r\n            console.error('Error capturing order:', error);\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    const handleError = (err) => {\r\n        console.log('Error: ', err);\r\n        setError(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <img src=\"path_to_your_image\" alt=\"Payment Logo\" /> {/* Replace with actual image source */}\r\n            <PayPalScriptProvider options={{ \"client-id\": \"AQTrkWTmd3pfVlhl_bNhKbCyjeVh0Yf-O-fsWLPw0sRgrzWwdPOCx0o_YFKSmoFfxkdecE0ySjfxoWPt\" }}>\r\n                <div className='payment-details' id=\"paypal-button-container\">\r\n                    {paid ? (\r\n                        <h2>Payment Successful!</h2>\r\n                    ) : (\r\n                        <>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={amount}\r\n                                onChange={(e) => setAmount(e.target.value)}\r\n                                placeholder=\"Enter Amount\"\r\n                            />\r\n                            <PayPalButtons\r\n                                createOrder={async (data, actions) => {\r\n                                    const orderID = await CreateOrder(amount); // Use custom amount\r\n                                    return orderID; // Return the created order ID\r\n                                }}\r\n                                onApprove={handleApprove}\r\n                                onError={handleError}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {error && <p>An error occurred during the payment process. Please try again.</p>}\r\n                </div>\r\n            </PayPalScriptProvider>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}