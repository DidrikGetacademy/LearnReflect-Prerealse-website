{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didri\\\\Desktop\\\\PreRealse\\\\LearnReflect-Prerealse-website\\\\src\\\\PaymentDetails.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaymentDetails() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [paid, setPaidFor] = useState(false);\n  const [error, setError] = useState(false);\n  const [amount, setAmount] = useState(20); // Allowing custom amount\n\n  const CreateOrder = async (amount, currency = \"USD\") => {\n    _s();\n    try {\n      useEffect(() => {\n        axios.get(\"https://learnreflects.com/Server/Payment.php\").then(response => {\n          console.log(response.data); // Log the full response\n          setCount(Number(response.data.count) || \"Error\"); // Access the count property directly\n        }).catch(err => console.log(err));\n      }, []);\n      const response = await fetch('https://learnreflects.com/Server/Payment.php', {\n        method: 'POST,GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount,\n          currency\n        })\n      });\n      const data = await response.json();\n      return data.orderID; // Return the order ID from the backend\n    } catch (error) {\n      console.error('Error creating PayPal order:', error);\n      setError(true);\n    }\n  };\n  _s(CreateOrder, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const handleApprove = async (data, actions) => {\n    try {\n      // Capture the order using the actions object\n      const orderData = await actions.order.capture();\n      console.log(\"Order successfully captured! Order Data: \", orderData);\n      setPaidFor(true);\n    } catch (error) {\n      console.error('Error capturing order:', error);\n      setError(true);\n    }\n  };\n  const handleError = err => {\n    console.log('Error: ', err);\n    setError(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: {\n        \"client-id\": \"AQTrkWTmd3pfVlhl_bNhKbCyjeVh0Yf-O-fsWLPw0sRgrzWwdPOCx0o_YFKSmoFfxkdecE0ySjfxoWPt\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-details\",\n        id: \"paypal-button-container\",\n        children: [paid ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payment Successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: \"Enter Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PayPalButtons, {\n            createOrder: async (data, actions) => {\n              const orderID = await CreateOrder(amount); // Use custom amount\n              return orderID; // Return the created order ID\n            },\n            onApprove: handleApprove,\n            onError: handleError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"An error occurred during the payment process. Please try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s2(PaymentDetails, \"7ZR7OdchYD6YLzR0PpiXwluqDy0=\");\n_c = PaymentDetails;\nvar _c;\n$RefreshReg$(_c, \"PaymentDetails\");","map":{"version":3,"names":["React","useState","PayPalScriptProvider","PayPalButtons","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentDetails","_s2","_s","$RefreshSig$","paid","setPaidFor","error","setError","amount","setAmount","CreateOrder","currency","useEffect","get","then","response","console","log","data","setCount","Number","count","catch","err","fetch","method","headers","body","JSON","stringify","json","orderID","handleApprove","actions","orderData","order","capture","handleError","children","options","className","id","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","createOrder","onApprove","onError","_c","$RefreshReg$"],"sources":["C:/Users/didri/Desktop/PreRealse/LearnReflect-Prerealse-website/src/PaymentDetails.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport axios from \"axios\";\r\nexport default function PaymentDetails() {\r\n    const [paid, setPaidFor] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [amount, setAmount] = useState(20); // Allowing custom amount\r\n\r\n    const CreateOrder = async (amount, currency = \"USD\") => {\r\n        try {\r\n            useEffect(() => {\r\n                axios.get(\"https://learnreflects.com/Server/Payment.php\")\r\n                  .then(response => {\r\n                    console.log(response.data); // Log the full response\r\n                    setCount(Number(response.data.count) || \"Error\"); // Access the count property directly\r\n                  })\r\n                  .catch(err => console.log(err));\r\n              }, []);\r\n            const response = await fetch('https://learnreflects.com/Server/Payment.php', {\r\n                method: 'POST,GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ amount, currency }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            return data.orderID; // Return the order ID from the backend\r\n        } catch (error) {\r\n            console.error('Error creating PayPal order:', error);\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    const handleApprove = async (data, actions) => {\r\n        try {\r\n            // Capture the order using the actions object\r\n            const orderData = await actions.order.capture();\r\n            console.log(\"Order successfully captured! Order Data: \", orderData);\r\n            setPaidFor(true);\r\n        } catch (error) {\r\n            console.error('Error capturing order:', error);\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    const handleError = (err) => {\r\n        console.log('Error: ', err);\r\n        setError(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <PayPalScriptProvider options={{ \"client-id\": \"AQTrkWTmd3pfVlhl_bNhKbCyjeVh0Yf-O-fsWLPw0sRgrzWwdPOCx0o_YFKSmoFfxkdecE0ySjfxoWPt\" }}>\r\n                <div className='payment-details' id=\"paypal-button-container\">\r\n                    {paid ? (\r\n                        <h2>Payment Successful!</h2>\r\n                    ) : (\r\n                        <>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={amount}\r\n                                onChange={(e) => setAmount(e.target.value)}\r\n                                placeholder=\"Enter Amount\"\r\n                            />\r\n                            <PayPalButtons\r\n                                createOrder={async (data, actions) => {\r\n                                    const orderID = await CreateOrder(amount); // Use custom amount\r\n                                    return orderID; // Return the created order ID\r\n                                }}\r\n                                onApprove={handleApprove}\r\n                                onError={handleError}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {error && <p>An error occurred during the payment process. Please try again.</p>}\r\n                </div>\r\n            </PayPalScriptProvider>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}