{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didri\\\\Desktop\\\\PreRealse\\\\LearnReflect-Prerealse-website\\\\src\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\"; //PayPal script is loading and can be used to change the values of the options of the PayPal script and at the same time reload the script with the updated parameters.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Checkout() {\n  _s();\n  const [{\n    options,\n    isPending\n  }, dispatch] = usePayPalScriptReducer();\n  const [currency, setCurrency] = useState(options.currency);\n  const onCurrencyChange = ({\n    target: {\n      value\n    }\n  }) => {\n    setCurrency(value);\n    dispatch({\n      type: 'resetOptions',\n      value: {\n        ...options,\n        currency: value\n      }\n    });\n  };\n  const onCreateOrder = (data, actions) => {\n    return actions.order.create({\n      purchase_units: [{\n        amount: {\n          value: \"8.99\"\n        }\n      }]\n    });\n  };\n  const onApproveOrder = (data, actions) => {\n    return actions.order.capture().then(details => {\n      const name = details.payer.name.given_name;\n      alert(`Transaction completed by ${name}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkout\",\n    children: [isPending ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: currency,\n        onChange: onCurrencyChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"USD\",\n          children: \"\\uD83D\\uDCB5 USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"EUR\",\n          children: \"\\uD83D\\uDCB6 Euro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      style: {\n        layout: \"vertical\"\n      },\n      createOrder: (data, actions) => onCreateOrder(data, actions),\n      onApprove: (data, order) => onApproveOrder(data, actions)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Checkout, \"aDCZULrLfOE1mZcCgwltD/7wM5U=\", false, function () {\n  return [usePayPalScriptReducer];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useState","PayPalButtons","usePayPalScriptReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","Checkout","_s","options","isPending","dispatch","currency","setCurrency","onCurrencyChange","target","value","type","onCreateOrder","data","actions","order","create","purchase_units","amount","onApproveOrder","capture","then","details","name","payer","given_name","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","style","layout","createOrder","onApprove","_c","$RefreshReg$"],"sources":["C:/Users/didri/Desktop/PreRealse/LearnReflect-Prerealse-website/src/Checkout.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\"; //PayPal script is loading and can be used to change the values of the options of the PayPal script and at the same time reload the script with the updated parameters.\r\nfunction Checkout() {\r\n    const [{ options, isPending }, dispatch] = usePayPalScriptReducer();\r\n    const [currency, setCurrency] = useState(options.currency);\r\n    const onCurrencyChange = ({ target: { value } }) => {\r\n        setCurrency(value);\r\n        dispatch({ type: 'resetOptions', value: { ...options, currency: value, }, });\r\n    }\r\n\r\n\r\n    const onCreateOrder = (data, actions) => { return actions.order.create({ purchase_units: [{ amount: { value: \"8.99\", }, },], }); }\r\n    const onApproveOrder = (data, actions) => { return actions.order.capture().then((details) => { const name = details.payer.name.given_name; alert(`Transaction completed by ${name}`); }); }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"checkout\">\r\n            {isPending ? <p>Loading...</p> : (<> <select value={currency} onChange={onCurrencyChange}>\r\n                <option value=\"USD\">ðŸ’µ USD</option>\r\n                <option value=\"EUR\">ðŸ’¶ Euro</option>\r\n            </select></>)}\r\n            <PayPalButtons style={{ layout: \"vertical\" }} createOrder={(data, actions) => onCreateOrder(data, actions)} onApprove={(data, order) => onApproveOrder(data, actions)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}